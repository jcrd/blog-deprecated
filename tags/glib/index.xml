<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>glib on twiddling bits</title><link>https://twiddlingbits.net/tags/glib/</link><description>Recent content in glib on twiddling bits</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://twiddlingbits.net/tags/glib/index.xml" rel="self" type="application/rss+xml"/><item><title>Debouncing with a custom GSource</title><link>https://twiddlingbits.net/debouncing-with-a-custom-gsource/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://twiddlingbits.net/debouncing-with-a-custom-gsource/</guid><description>&lt;p>While developing &lt;a href="https://twiddlingbits.net/introducing-sessiond/">sessiond&lt;/a>, a session manager written in C with
&lt;a href="https://docs.gtk.org/glib/">GLib&lt;/a>, I was presented with an ideal use case for debouncing: postponing
the execution of code that would otherwise run too frequently based on the
influx of external events. sessiond is responsible for monitoring X11 input
events, which are processed in the GLib event loop using a custom
&lt;a href="https://docs.gtk.org/glib/struct.Source.html">GSource&lt;/a>. Debouncing avoids unnecessarily handling every event,
especially mouse input events which are generated constantly while the mouse
pointer moves.&lt;/p></description></item></channel></rss>