<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>project on twiddling bits</title><link>https://twiddlingbits.net/tags/project/</link><description>Recent content in project on twiddling bits</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://twiddlingbits.net/tags/project/index.xml" rel="self" type="application/rss+xml"/><item><title>luarocket, or vendoring Lua rocks</title><link>https://twiddlingbits.net/luarocket-or-vendoring-lua-rocks/</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://twiddlingbits.net/luarocket-or-vendoring-lua-rocks/</guid><description>&lt;p>The Lua programming language, like many others, employs a purpose-built package
manager to download and install its ecosystem of libraries. This tool,
&lt;a href="https://luarocks.org/">LuaRocks&lt;/a>, has some notable features:&lt;/p>
&lt;ul>
&lt;li>downloads/installs packages to user-specific or system-wide locations&lt;/li>
&lt;li>configurable dependency resolution&lt;/li>
&lt;li>builds locally define rocks (Lua modules packaged by LuaRocks)&lt;/li>
&lt;li>queries information about the active LuaRocks configuration&lt;/li>
&lt;/ul>
&lt;p>In these ways, LuaRocks is functionally similar to the package managers of other
dynamic languages such as &lt;a href="https://pip.pypa.io/en/stable/">pip&lt;/a> for Python and &lt;a href="https://www.npmjs.com/">npm&lt;/a> for JavaScript.&lt;/p></description></item><item><title>Introducing sessiond</title><link>https://twiddlingbits.net/introducing-sessiond/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://twiddlingbits.net/introducing-sessiond/</guid><description>&lt;p>When I began using Linux on the desktop in ~2012, I experimented with the
prevalent desktop environments (Gnome, KDE, etc.), but was quickly drawn into
the realm of tiling window managers by their promise of increased productivity
and customization. While I believe these promises were fulfilled, tiling window
managers were not without a significant shortcoming: they are solely window
managers, lacking the integrated suite of software and applications that put the
environment in desktop environments.&lt;/p></description></item></channel></rss>