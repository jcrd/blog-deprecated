<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on twiddling bits</title><link>https://twiddlingbits.net/tags/c/</link><description>Recent content in c on twiddling bits</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://twiddlingbits.net/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Debouncing with a custom GSource</title><link>https://twiddlingbits.net/debouncing-with-a-custom-gsource/</link><pubDate>Tue, 13 Apr 2021 00:00:00 +0000</pubDate><guid>https://twiddlingbits.net/debouncing-with-a-custom-gsource/</guid><description>&lt;p>While developing &lt;a href="https://twiddlingbits.net/introducing-sessiond/">sessiond&lt;/a>, a session manager written in C with
&lt;a href="https://docs.gtk.org/glib/">GLib&lt;/a>, I was presented with an ideal use case for debouncing: postponing
the execution of code that would otherwise run too frequently based on the
influx of external events. sessiond is responsible for monitoring X11 input
events, which are processed in the GLib event loop using a custom
&lt;a href="https://docs.gtk.org/glib/struct.Source.html">GSource&lt;/a>. Debouncing avoids unnecessarily handling every event,
especially mouse input events which are generated constantly while the mouse
pointer moves.&lt;/p></description></item><item><title>Introducing sessiond</title><link>https://twiddlingbits.net/introducing-sessiond/</link><pubDate>Sun, 04 Apr 2021 00:00:00 +0000</pubDate><guid>https://twiddlingbits.net/introducing-sessiond/</guid><description>&lt;p>When I began using Linux on the desktop in ~2012, I experimented with the
prevalent desktop environments (Gnome, KDE, etc.), but was quickly drawn into
the realm of tiling window managers by their promise of increased productivity
and customization. While I believe these promises were fulfilled, tiling window
managers were not without a significant shortcoming: they are solely window
managers, lacking the integrated suite of software and applications that put the
environment in desktop environments.&lt;/p></description></item></channel></rss>